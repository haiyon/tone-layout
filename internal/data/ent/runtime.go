// Code generated by ent, DO NOT EDIT.

package ent

import (
	"sample/internal/data/ent/greeter"
	"sample/internal/data/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	greeterFields := schema.Greeter{}.Fields()
	_ = greeterFields
	// greeterDescCreatedAt is the schema descriptor for created_at field.
	greeterDescCreatedAt := greeterFields[2].Descriptor()
	// greeter.DefaultCreatedAt holds the default value on creation for the created_at field.
	greeter.DefaultCreatedAt = greeterDescCreatedAt.Default.(func() time.Time)
	// greeterDescUpdatedAt is the schema descriptor for updated_at field.
	greeterDescUpdatedAt := greeterFields[3].Descriptor()
	// greeter.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	greeter.DefaultUpdatedAt = greeterDescUpdatedAt.Default.(func() time.Time)
	// greeter.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	greeter.UpdateDefaultUpdatedAt = greeterDescUpdatedAt.UpdateDefault.(func() time.Time)
	// greeterDescID is the schema descriptor for id field.
	greeterDescID := greeterFields[0].Descriptor()
	// greeter.DefaultID holds the default value on creation for the id field.
	greeter.DefaultID = greeterDescID.Default.(func() string)
}
